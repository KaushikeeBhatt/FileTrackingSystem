name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run ESLint
      run: pnpm run lint

    - name: Run TypeScript check
      run: pnpm run type-check

    - name: Run unit tests
      run: pnpm run test
      env:
        MONGODB_URI: mongodb://localhost:27017/file-tracking-test
        JWT_SECRET: test-jwt-secret-key

    - name: Run integration tests
      run: pnpm run test:integration
      env:
        MONGODB_URI: mongodb://localhost:27017/file-tracking-test
        JWT_SECRET: test-jwt-secret-key

    - name: Build application
      run: pnpm run build
      env:
        MONGODB_URI: mongodb://localhost:27017/file-tracking-test
        JWT_SECRET: test-jwt-secret-key

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
